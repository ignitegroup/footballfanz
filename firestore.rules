rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isOwner(userId) || isAdmin();
    }

    // Events collection
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) || isAdmin()
      );
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // WhatsApp Groups collection
    match /groups/{groupId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Flight Pools collection
    match /flightPools/{poolId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // Match Pools collection
    match /matchPools/{poolId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }
  }
}